---
- include_vars: vars/mongo.yaml
- name: Update apt cache
  apt:
    update_cache: yes

- name: Check Ubuntu version
  command: lsb_release -rs
  register: ubuntu_version

- name: Check if focal-security repository exists
  stat:
    path: /etc/apt/sources.list.d/focal-security.list
  register: focal_security_repo

- name: Add focal-security repository
  shell: echo "deb http://security.ubuntu.com/ubuntu focal-security main" | sudo tee /etc/apt/sources.list.d/focal-security.list
  when: ubuntu_version.stdout == "22.04" and not focal_security_repo.stat.exists

- name: Update apt cache
  apt:
    update_cache: yes
  when: ubuntu_version.stdout == "22.04"

- name: Install libssl1.1
  apt:
    name: libssl1.1
    state: present
  when: ubuntu_version.stdout == "22.04"

- name: Install prerequisite package
  package:
    name: "{{ mongo_prereq_packages }}"
    state: present
    update_cache: yes
  become: yes

- name: Install pymongo
  pip:
    name: pymongo

- name: Check if MongoDB APT keyring exists
  stat:
    path: /usr/share/keyrings/mongo-key.gpg
  register: mongo_keyring_exists

- name: Add MongoDB APT keyring
  shell: "curl -fsSL https://www.mongodb.org/static/pgp/server-{{ mongodb_version }}.asc | sudo gpg --dearmour -o /usr/share/keyrings/mongo-key.gpg"
  args:
    executable: /bin/bash
  when: not mongo_keyring_exists.stat.exists

- name: Check if MongoDB repository exists
  stat:
    path: /etc/apt/sources.list.d/mongodb-org-{{ mongodb_version }}.list
  register: mongo_repository_exists

- name: Add MongoDB repository
  shell: sudo sh -c 'echo deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongo-key.gpg] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/{{ mongodb_version }} multiverse > /etc/apt/sources.list.d/mongodb-org-{{ mongodb_version }}.list'
  args:
    executable: /bin/bash
  when: not mongo_repository_exists.stat.exists

- name: Update apt cache
  apt:
    update_cache: yes

- name: Install MongoDB packages
  apt:
    name: "{{ mongo_packages }}"
    state: latest
    update_cache: true

- name: Enable and start MongoDB service
  service:
    name: mongod
    state: started
    enabled: yes

- name: Add the admin user
  community.mongodb.mongodb_user:
    database: admin
    name: admin
    password: "{{ mongo_admin_pass }}"
    roles: userAdminAnyDatabase
    state: present
  ignore_errors: no

- name: Create fame user
  community.mongodb.mongodb_user:
    database: fame
    name: fame
    password: "{{ mongo_fame_pass }}"
    state: present
    roles: dbOwner
    ssl: False

- name: Enable authentication in MongoDB
  lineinfile:
    path: /etc/mongod.conf
    line: "security:\n  authorization: enabled"
    insertafter: "^#security:"
    state: present
    backup: yes
  notify: 
    - restart mongodb
